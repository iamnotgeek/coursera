dependency_verification <- function(...) {
  lapply(list(...), function(lib) {
    if (!lib %in% installed.packages()) 
      install.packages(lib)
  })
}


dependency_verification("dplyr", "reshape2")


library("dplyr")
library("reshape2")


data_directory <- "UCI HAR Dataset"


load_file <- function(filename, ...) {
  file.path(..., filename) %>%
  read.table(header = FALSE)
}


load_train_file <- function(filename) {
  load_file(filename, data_directory, "train")
}


load_test_file <- function(filename) {
  load_file(filename, data_directory, "test")
}


describe_lbl_ds <- function(ds) {
  names(ds) <- activity_col  
  ds$Activity <- factor(ds$Activity, levels = activity_lbl$V1, labels = activity_lbl$V2)
  ds
}


describe_act_ds <- function(ds) {
  col_names <- gsub("-", "_", features$V2)
  col_names <- gsub("[^a-zA-Z\\d_]", "", col_names)
  names(ds) <- make.names(names = col_names, unique = TRUE, allow_ = TRUE)
  ds
}


describe_sub_ds <- function(ds) {
  names(ds) <- subject_col
  ds
}


if (!file.exists(data_directory)) {
  source_url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
  dest_file <- "Dataset.zip"
  download.file(source_url, destfile = dest_file, method = "curl")
  unzip(dest_file)
  if (!file.exists(data_directory)) 
    stop("The downloaded dataset doesn't have the expected structure!")
}


subject_col <- "Subject"
activity_col <- "Activity"


features <- load_file("features.txt", data_directory)


activity_lbl <- load_file("activity_labels.txt", data_directory)


train_set <- load_train_file("X_train.txt") %>% describe_act_ds
train_lbl <- load_train_file("y_train.txt") %>% describe_lbl_ds
train_sub <- load_train_file("subject_train.txt") %>% describe_sub_ds


test_set <- load_test_file("X_test.txt") %>% describe_act_ds
test_lbl <- load_test_file("y_test.txt") %>% describe_lbl_ds
test_sub <- load_test_file("subject_test.txt") %>% describe_sub_ds


merge_data <- rbind(
                cbind(train_set, train_lbl, train_sub),
                cbind(test_set, test_lbl, test_sub)
              ) %>%
              select(
                matches("mean|std"), 
                one_of(subject_col, activity_col)
              )


id_cols <- c(subject_col, activity_col)
tidy_data <- melt(
               merge_data, 
               id = id_cols, 
               measure.vars = setdiff(colnames(merge_data), id_cols)
             ) %>%
             dcast(Subject + Activity ~ variable, mean)
             
write.table(tidy_data, file = "tidy_data.txt", sep = ",", row.names = FALSE)
write.table(tidy_data, file = "tidy_data.csv", sep = ",", row.names = FALSE)
